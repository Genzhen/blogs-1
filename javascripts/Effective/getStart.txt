1、严格模式
  "user strict"只有在脚本顶部或者函数顶部才会生效，对于合并部署脚本文件需要避免入坑（自执行函数包裹）。

2、浮点运算
  javascript只有数字类型，不论是浮点数和整数，其实都是双精度浮点数,但能完美表达53位精度的整数。(-2五十三次方)~(2五十三次方)。
  位运算比较特殊，javascript会将其隐式地转换成32位整数后进行运算，toString(2);
  浮点运算经常不精准，例如：0.1+0.2，解决方案--尽量使用整数运算。

3、分号自动插入
  (1).分号仅在}标记之前、一个或多个换行之后和程序输入的结尾插入;
  (2).分号仅在随后的输入标记不能解析时插入，也就是说分号插入也是一种错误校正机制;
  (3).在以(、[、+、-、/字符开头的语句前绝对不能省略分号;
  (4).当脚本连接的时候，在脚本之间的显式地插入分号;
  (5).在return、throw、break、continue、++、--的参数之前绝不能用换行;
  (6).分号不能作为for循环的头部或空语句的分隔符而被推导出。
  
4、字符串代码单元
  javascript字符串由16位的代码单元组成，而不是由Unicode代码点组成，使用两个代码单元表示65536及以上的Unicode代码点，又叫代理对。
  length、charAt、charCodeAt方法及正则模式(如：单字符模式（.）)都将受代理对影响，出现匹配不正常的状况。
