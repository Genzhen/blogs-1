1、函数参数的默认值
  // 写法一
  if (typeof y === 'undefined') {
    y = 'World';
  }
  // 写法二
  if (arguments.length === 1) {
    y = 'World';
  }
  // 写法三(缺点不能赋值false)
  y = y || 'World';
  ES6允许为函数的参数设置默认值，即直接写在参数定义的后面。定义了默认值的参数，必须是函数的尾部参数，其后不能再有其他无默认值
  的参数。这是因为有了默认值以后，该参数可以省略，只有位于尾部，才可能判断出到底省略了哪些参数。
  如果传入undefined，将触发该参数等于默认值，null则没有这个效果。指定了默认值以后，函数的length属性，将返回没有指定默认值的参数   个数。
  也就是说，  指定了默认值后，length属性将失真。(function(a, b, c = 5){}).length // 2
  参数变量是默认声明的，所以不能用let或const再次声明。
  
2、rest参数
  ES6引入rest参数（形式为“...变量名”），用于获取函数的多余参数，这样就不需要使用arguments对象了。
  rest参数中的变量代表一个数组，所以数组特有的方法都可以用于这个变量。函数的length属性，不包括rest参数。
  rest参数之后不能再有其他参数（即只能是最后一个参数），否则会报错。

3、扩展运算符
  扩展运算符（spread）是三个点（...）。它好比rest参数的逆运算，将一个数组转为用逗号分隔的参数序列。该运算符主要用于函数调用。
