1、数组解构赋值
（1）. ES6允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。
只要等号两边的模式相同，左边的变量就会被赋予对应的值。例如：
let [head, ...tail] = [1, 2, 3, 4];
head // 1
tail // [2, 3, 4]

如果对undefined或null进行解构，会报错。这是因为解构只能用于数组或对象。其他原始类型的值都可以转为相应的对象，但是，undefined和
null不能转为对象，因此报错。
（2）. 解构赋值允许指定默认值。ES6内部使用严格相等运算符（===），判断一个位置是否有值。所以，如果一个数组成员不严格等于
undefined，默认值是不会生效的。
解构赋值不仅适用于var命令，也适用于let和const命令。
